/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import com.snethlios.dao.HinhDAO;
import com.snethlios.dao.KhuyenMaiDAO;
import com.snethlios.dao.NhanVienDAO;
import com.snethlios.dao.SanPhamDao;
import com.snethlios.entity.Hinh;
import com.snethlios.entity.KhuyenMai;
import com.snethlios.entity.NhanVien;
import com.snethlios.entity.SanPham;
import com.snethlios.utils.Auth;
import com.snethlios.utils.DateHelper;
import com.snethlios.utils.MsgBox;
import com.snethlios.utils.XDate;
import com.snethlios.utils.XImage;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HUYNH DUC HOAN
 */
public class SanPhamJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NhanVienJPanel
     */
    public SanPhamJPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        btngrpAnh = new javax.swing.ButtonGroup();
        date1 = new com.raven.datechooser.DateChooser();
        pnlTong = new javax.swing.JPanel();
        pnlForm = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txtmaSP = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        cboHang = new javax.swing.JComboBox<>();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        txtSoLuong = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtMau = new javax.swing.JTextField();
        txtKichThuoc = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txtNgayNhap = new javax.swing.JTextField();
        txtLoai = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        btnThemHinh = new javax.swing.JButton();
        lblMaHinh = new javax.swing.JLabel();
        pnlCard = new javax.swing.JPanel();
        lblAnhA = new javax.swing.JLabel();
        lblAnhB = new javax.swing.JLabel();
        rdoAnhA = new javax.swing.JRadioButton();
        rdoAnhB = new javax.swing.JRadioButton();
        jLabel34 = new javax.swing.JLabel();
        cboMaKhuyenMai = new javax.swing.JComboBox<>();
        CboHinhAnh = new javax.swing.JComboBox<>();
        btnNgayNhap = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();

        date1.setTextRefernce(txtNgayNhap);

        setPreferredSize(new java.awt.Dimension(1000, 650));

        pnlTong.setBackground(new java.awt.Color(242, 242, 241));
        pnlTong.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTong.setPreferredSize(new java.awt.Dimension(1000, 650));

        pnlForm.setBackground(new java.awt.Color(255, 255, 255));
        pnlForm.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quản Lý Sản Phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12))); // NOI18N

        jLabel22.setText("Mã Sản Phẩm");

        jLabel23.setText("Tên Sản Phẩm:");

        jLabel24.setText("Loại Sản Phẩm:");

        jLabel25.setText("Đơn Giá:");

        txtDonGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDonGiaActionPerformed(evt);
            }
        });

        jLabel26.setText("Số Lượng");

        jLabel27.setText("Kích Thước:");

        jLabel28.setText("Hãng");

        cboHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nike", "Puma" }));

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete (1).png"))); // NOI18N
        btnDelete.setText("XÓA");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/updated.png"))); // NOI18N
        btnUpdate.setText("CẬP NHẬT");
        btnUpdate.setPreferredSize(new java.awt.Dimension(72, 22));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/new (2).png"))); // NOI18N
        btnInsert.setText("THÊM");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/clear.png"))); // NOI18N
        btnNew.setText("MỚI");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        jLabel31.setText("Màu Sắc:");

        txtMau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMauActionPerformed(evt);
            }
        });

        jLabel32.setText("Ngày Nhập:");

        jLabel33.setText("Mã Khuyến Mãi");

        txtMaNV.setEditable(false);

        btnThemHinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/save-file.png"))); // NOI18N
        btnThemHinh.setText("TẠO HÌNH");
        btnThemHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHinhActionPerformed(evt);
            }
        });

        lblMaHinh.setText("Mã Hình");

        pnlCard.setBackground(new java.awt.Color(255, 255, 255));
        pnlCard.setPreferredSize(new java.awt.Dimension(150, 181));
        pnlCard.setLayout(new java.awt.CardLayout());

        lblAnhA.setBackground(new java.awt.Color(255, 255, 255));
        lblAnhA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnhA.setText("Ảnh A");
        pnlCard.add(lblAnhA, "card2");

        lblAnhB.setBackground(new java.awt.Color(255, 255, 255));
        lblAnhB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnhB.setText("Ảnh B");
        pnlCard.add(lblAnhB, "card3");

        btngrpAnh.add(rdoAnhA);
        rdoAnhA.setSelected(true);
        rdoAnhA.setText("Ảnh A");
        rdoAnhA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoAnhAActionPerformed(evt);
            }
        });

        btngrpAnh.add(rdoAnhB);
        rdoAnhB.setText("Ảnh B");
        rdoAnhB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoAnhBActionPerformed(evt);
            }
        });

        jLabel34.setText("Mã NV");

        btnNgayNhap.setText("...");
        btnNgayNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNgayNhapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFormLayout = new javax.swing.GroupLayout(pnlForm);
        pnlForm.setLayout(pnlFormLayout);
        pnlFormLayout.setHorizontalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCard, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addComponent(rdoAnhA, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdoAnhB, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInsert)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTenSP))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(18, 18, 18)
                                .addComponent(txtmaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFormLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlFormLayout.createSequentialGroup()
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMau, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboHang, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMaHinh)
                        .addGap(24, 24, 24)
                        .addComponent(CboHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addComponent(btnThemHinh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNew)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboMaKhuyenMai, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNgayNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlFormLayout.setVerticalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNgayNhap))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlCard, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaHinh)
                    .addComponent(rdoAnhA)
                    .addComponent(rdoAnhB)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CboHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemHinh)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboMaKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        tblSanPham.setBackground(new java.awt.Color(242, 242, 242));
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Tên SP", "Loại SP", "Đơn Giá", "Số Lượng ", "Màu Sắc", "Kích thước", "Hãng", "Ngày Nhập", "Mã Hình", "MaNV", "MaKM"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblSanPham);

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/google.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/first-track.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/next-track.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/last-track.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/previous-track.png"))); // NOI18N
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTongLayout = new javax.swing.GroupLayout(pnlTong);
        pnlTong.setLayout(pnlTongLayout);
        pnlTongLayout.setHorizontalGroup(
            pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTongLayout.createSequentialGroup()
                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlTongLayout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTongLayout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addComponent(btnFirst)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrev)
                        .addGap(18, 18, 18)
                        .addComponent(btnNext)
                        .addGap(18, 18, 18)
                        .addComponent(btnLast))
                    .addGroup(pnlTongLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 962, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTongLayout.setVerticalGroup(
            pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTongLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(pnlForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNext, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPrev))
                        .addComponent(btnFirst))
                    .addComponent(btnLast, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTong, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTong, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDonGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDonGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonGiaActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        SanPham sp = new SanPham();
        sp.setMaSp(txtmaSP.getText());
        if (isValidate()) {
            if (dao.selectByID(sp.getMaSp()) != null) {
                MsgBox.alert(this, "Mã Sản Phẩm Đa Tổn Tại!");
            } else {
                this.insert();
                loadTableSanPham();
            }

        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void txtMauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMauActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            index = tblSanPham.getSelectedRow();
            edit();
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (isValidate()) {
            this.update();
            loadTableSanPham();
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        this.delete();
        loadTableSanPham();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        try {
            this.clear();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        this.index++;
        if (index > tblSanPham.getRowCount() - 1) {
            index = 0;
        }
        tblSanPham.setRowSelectionInterval(index, index);
        this.edit();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        this.index = tblSanPham.getRowCount() - 1;
        tblSanPham.setRowSelectionInterval(index, index);

        this.edit();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        this.searchID();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        index = 0;
        tblSanPham.setRowSelectionInterval(index, index);
        this.edit();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        this.index--;
        if (index < 0) {
            index = tblSanPham.getRowCount() - 1;
        }
        tblSanPham.setRowSelectionInterval(index, index);
        this.edit();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnThemHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHinhActionPerformed
        // TODO add your handling code here:
        openThemAnhJDialog();
        fillComboboxHinh();
    }//GEN-LAST:event_btnThemHinhActionPerformed

    private void rdoAnhAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoAnhAActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) pnlCard.getLayout();
        if (index > 0 && index <= tblSanPham.getRowCount()) {
            this.index = tblSanPham.getSelectedRow();
            edit();
        }
        layout.first(pnlCard);
    }//GEN-LAST:event_rdoAnhAActionPerformed

    private void rdoAnhBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoAnhBActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) pnlCard.getLayout();
        if (index > 0 && index <= tblSanPham.getRowCount()) {
            this.index = tblSanPham.getSelectedRow();
            edit();
        }
        layout.last(pnlCard);
    }//GEN-LAST:event_rdoAnhBActionPerformed

    private void btnNgayNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNgayNhapActionPerformed
        // TODO add your handling code here:
        date1.showPopup();
    }//GEN-LAST:event_btnNgayNhapActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CboHinhAnh;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnNgayNhap;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnThemHinh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup btngrpAnh;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboHang;
    private javax.swing.JComboBox<String> cboMaKhuyenMai;
    private com.raven.datechooser.DateChooser date1;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblAnhA;
    private javax.swing.JLabel lblAnhB;
    private javax.swing.JLabel lblMaHinh;
    private javax.swing.JPanel pnlCard;
    private javax.swing.JPanel pnlForm;
    private javax.swing.JPanel pnlTong;
    private javax.swing.JRadioButton rdoAnhA;
    private javax.swing.JRadioButton rdoAnhB;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtKichThuoc;
    private javax.swing.JTextField txtLoai;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtMau;
    private javax.swing.JTextField txtNgayNhap;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtmaSP;
    // End of variables declaration//GEN-END:variables
    SanPhamDao dao = new SanPhamDao();
    HinhDAO hdao = new HinhDAO();
    private int index = -1;
    ArrayList<SanPham> listSanPham = new ArrayList<SanPham>();

    private void init() {
        loadTableSanPham();
        fillComboBoxHang();
        fillComboboxHinh();
        index = 0;
        fillComboboxKhuyenMai();
        tblSanPham.setRowSelectionInterval(index, index);
        this.edit();
        txtMaNV.setText(Auth.user.getMaNV());
    }

    void edit() {
        String masp = (String) tblSanPham.getValueAt(this.index, 0);
        SanPham sp = dao.selectByID(masp);
        this.setForm(sp);
        Hinh h = hdao.selectByID((String) tblSanPham.getValueAt(index, 9));
        if (h.getHinha() != null) {
            lblAnhA.setToolTipText(h.getHinha());
            lblAnhA.setIcon(new ImageIcon(XImage.read(h.getHinha()).getImage().getScaledInstance(150, 181, Image.SCALE_SMOOTH)));
        }
        if (h.getHinhb() != null) {
            lblAnhB.setToolTipText(h.getHinhb());
            lblAnhB.setIcon(new ImageIcon(XImage.read(h.getHinhb()).getImage().getScaledInstance(150, 181, Image.SCALE_SMOOTH)));
        }
//        setStatus();
    }

    void clear() {
        SanPham sp = new SanPham();
        this.setForm(sp);
        tblSanPham.clearSelection();
        lblAnhA.setToolTipText(null);
        lblAnhB.setToolTipText(null);
        lblAnhA.setIcon(null);
        lblAnhB.setIcon(null);
        this.index = -1;
    }

    void setForm(SanPham model) {
        txtmaSP.setText(model.getMaSp());
        txtTenSP.setText(model.getTenSp());
        txtLoai.setText(model.getLoai());
//        cboLoaiSP.setToolTipText(String.valueOf(model.getLoai()));
        txtDonGia.setText(String.valueOf(model.getDonGia()));
        txtSoLuong.setText(String.valueOf(model.getSoLuong()));
        txtMau.setText(model.getMau());
        txtKichThuoc.setText(String.valueOf(model.getKichThuoc()));
        txtNgayNhap.setText(String.valueOf(model.getNgayNhap()));
        cboHang.setSelectedItem(String.valueOf(model.getHang()));
        try {
            CboHinhAnh.setSelectedItem(String.valueOf(model.getMaHinh()));
        } catch (Exception e) {
        }
        
        txtMaNV.setText(Auth.user.getMaNV());
        txtNgayNhap.setText(DateHelper.toString(model.getNgayNhap(), "dd-MM-yyyy"));
        Hinh h = hdao.selectByID((String) tblSanPham.getValueAt(index, 9));
        cboMaKhuyenMai.setSelectedItem(String.valueOf(model.getMaKM()));
    }

    SanPham getForm() {
        SanPham model = new SanPham();
        model.setMaSp(txtmaSP.getText());
        model.setTenSp(txtTenSP.getText());
        model.setLoai(txtLoai.getText());
        model.setDonGia(Double.parseDouble(txtDonGia.getText()));
        model.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        model.setMau(txtMau.getText());
        model.setKichThuoc(Integer.parseInt(txtKichThuoc.getText()));
        model.setHang(String.valueOf(cboHang.getSelectedItem().toString()));
        model.setMaHinh(String.valueOf(CboHinhAnh.getSelectedItem().toString()));
        model.setMaNV(Auth.user.getMaNV());
        Date now = new Date();
        model.setNgayNhap(XDate.addDays(now, 0));
        model.setMaKM(String.valueOf(cboMaKhuyenMai.getSelectedItem().toString()));
        return model;
    }

//    void setStatus(boolean insertable) {
//        txtmaSP.setEditable(!insertable);
//        btnInsert.setEnabled(!insertable);
//        btnUpdate.setEnabled(!insertable);
//        btnDelete.setEnabled(!insertable);
//        btnNew.setEnabled(!insertable);
//
//        boolean first = this.index > 0;
//        boolean last = this.index < tblSanPham.getRowCount() - 1;
//        btnFirst.setEnabled(!insertable && first);
//        btnPrev.setEnabled(!insertable && first);
//        btnLast.setEnabled(insertable && last);
//        btnNext.setEnabled(insertable && last);
//    }
    void loadTableSanPham() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        try {
            listSanPham = (ArrayList<SanPham>) dao.selectAll();
            for (SanPham sp : listSanPham) {
                Object[] row = {
                    sp.getMaSp(),
                    sp.getTenSp(),
                    sp.getLoai(),
                    sp.getDonGia(),
                    sp.getSoLuong(),
                    sp.getMau(),
                    sp.getKichThuoc(),
                    sp.getHang(),
                    XDate.toString(sp.getNgayNhap(), "dd-MM-yyyy"),
                    sp.getMaHinh(),
                    sp.getMaNV(),
                    sp.getMaKM()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void fillComboBoxHang() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboHang.getModel();
        model.removeAllElements();
        try {
            List<String> list = dao.selectAllHang();
            for (String cd : list) {
                model.addElement(cd);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void insert() {
        SanPham sp = getForm();
        dao.insert(sp);
        this.loadTableSanPham();
        this.clear();

    }

    void update() {
        SanPham sp = getForm();
        try {
            dao.update(sp);
            this.loadTableSanPham();
            MsgBox.alert(this, "Cập nhật thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
    }

    void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa nhân viên!");
        } else {
            String masp = txtmaSP.getText();
            try {
                dao.delete(masp);
                this.loadTableSanPham();
                this.clear();
                MsgBox.alert(this, "Xóa thành công");
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa thất bại");
            }
        }
    }

    boolean isValidate() {
        if (txtmaSP.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng không dể trống mã sản phẩm!");
            txtmaSP.setBackground(Color.yellow);
            txtmaSP.requestFocus();
            return false;
        } else {
            txtmaSP.setBackground(Color.white);
        }

        if (txtTenSP.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng không dể trống Tên Sản Phẩm!");
            txtTenSP.setBackground(Color.yellow);
            txtTenSP.requestFocus();
            return false;
        } else {
            txtTenSP.setBackground(Color.white);
        }
        if (txtLoai.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng không dể trống loại sản phẩm ");
            txtLoai.setBackground(Color.yellow);
            txtLoai.requestFocus();
            return false;
        } else {
            txtLoai.setBackground(Color.white);
        }
        if (txtDonGia.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng không dể trống đơn giá");
            txtDonGia.setBackground(Color.yellow);
            txtDonGia.requestFocus();
            return false;
        } else {
            txtDonGia.setBackground(Color.white);
        }
        if (txtSoLuong.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng không dể trống số lượng!");
            txtSoLuong.setBackground(Color.yellow);
            txtSoLuong.requestFocus();
            return false;
        } else {
            txtSoLuong.setBackground(Color.white);
        }
        if (txtMau.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng không dể trống màu sản phẩm!");
            txtMau.setBackground(Color.yellow);
            txtMau.requestFocus();
            return false;
        } else {
            txtMau.setBackground(Color.white);
        }
        if (txtKichThuoc.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng không dể trống kích thước!");
            txtKichThuoc.setBackground(Color.yellow);
            txtKichThuoc.requestFocus();
            return false;
        } else {
            txtKichThuoc.setBackground(Color.white);
        }

        try {
            double donGia = Double.parseDouble(txtDonGia.getText());
            int soLuong = Integer.parseInt(txtSoLuong.getText());
            int kichThuoc = Integer.parseInt(txtKichThuoc.getText());
        } catch (Exception e) {
            MsgBox.alert(this, "Vui lòng kiểm tra kiểu định dạng!");
            return false;
        }
        return true;
    }

    public void searchID() {
        String text = txtSearch.getText();

        if (findId(text)) {
//            JOptionPane.showMessageDialog(this, "Employee found", "notification", JOptionPane.INFORMATION_MESSAGE); // thông báo 
//            index = tblSanPham.getSelectedRow();
            tblSanPham.setRowSelectionInterval(index, index);
            this.edit();
// highlight dòng nhân viên đã được tìm thấy 
//            showPoint(); // đỗ dữ liệu lên form tại vị trí nhân viên đã được tìm thấy 
        } else {
            MsgBox.alert(this, "The employee you are looking for could not be found"); // nếu không tìm thấy nhân viên thì thông báo cho người dùng 

        }
    }

    private boolean findId(String str) {
        for (SanPham st : listSanPham) {
            String check = String.valueOf(st.getMaSp()); // chuyển sang thành chuỗi 
            if (check.equalsIgnoreCase(str)) {
                index = listSanPham.indexOf(st);
                return true;
            }
        }
        return false;
    }

    void openThemAnhJDialog() {
        ThemAnhJDialog taj = new ThemAnhJDialog(null, true);
        taj.setVisible(true);
    }
    KhuyenMaiDAO kmDao = new KhuyenMaiDAO();

    public void fillComboboxKhuyenMai() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaKhuyenMai.getModel();
        model.removeAllElements();
        try {
          List<String> list = dao.selectAllMAKM();
            for (String cd : list) {
                model.addElement(cd);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }
    HinhDAO haDao = new HinhDAO();

    public void fillComboboxHinh() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) CboHinhAnh.getModel();
        model.removeAllElements();
        try {
            List<String> list = haDao.selectAllHinh();
            for (String cd : list) {
                model.addElement(cd);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }
}
