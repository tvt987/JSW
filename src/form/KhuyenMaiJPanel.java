/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import com.snethlios.dao.KhuyenMaiDAO;
import com.snethlios.dao.SanPhamDao;
import com.snethlios.entity.KhuyenMai;
import com.snethlios.entity.SanPham;
import com.snethlios.utils.JdbcHelper;
import com.snethlios.utils.MsgBox;
import com.snethlios.utils.XDate;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class KhuyenMaiJPanel extends javax.swing.JPanel {

    /**
     * Creates new form KhuyenMaiJPanel
     */
    public KhuyenMaiJPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        date = new com.raven.datechooser.DateChooser();
        date2 = new com.raven.datechooser.DateChooser();
        pnlDanhSachSP = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSachSP = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cboApDung = new javax.swing.JComboBox<>();
        pnlKhuyenMai = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaKM = new javax.swing.JTextField();
        txtTenKM = new javax.swing.JTextField();
        txtBatDau = new javax.swing.JTextField();
        txtMucGiam = new javax.swing.JTextField();
        txtKetThuc = new javax.swing.JTextField();
        rdoHoatDong = new javax.swing.JRadioButton();
        rdoNgungHoatDong = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnKetThuc = new javax.swing.JButton();
        btnBatDau = new javax.swing.JButton();
        pnlDanhSachKhuyenMai = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhSachKM = new javax.swing.JTable();

        date.setTextRefernce(txtBatDau);

        date2.setForeground(new java.awt.Color(0, 102, 204));
        date2.setTextRefernce(txtKetThuc);

        setBackground(new java.awt.Color(255, 255, 255));

        pnlDanhSachSP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12))); // NOI18N
        pnlDanhSachSP.setOpaque(false);

        tblDanhSachSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Tên SP", "Loại SP", "Đơn giá", "Số lượng", "Màu sắc", "Kích thước", "Hãng", "Khuyến mãi"
            }
        ));
        tblDanhSachSP.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblDanhSachSP.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tblDanhSachSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachSPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDanhSachSP);

        jLabel1.setText("ÁP DỤNG CHO:");

        cboApDung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboApDungActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDanhSachSPLayout = new javax.swing.GroupLayout(pnlDanhSachSP);
        pnlDanhSachSP.setLayout(pnlDanhSachSPLayout);
        pnlDanhSachSPLayout.setHorizontalGroup(
            pnlDanhSachSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDanhSachSPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDanhSachSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDanhSachSPLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(cboApDung, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlDanhSachSPLayout.setVerticalGroup(
            pnlDanhSachSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDanhSachSPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDanhSachSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboApDung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlKhuyenMai.setBackground(new java.awt.Color(255, 255, 255));
        pnlKhuyenMai.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tạo khuyến mãi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12))); // NOI18N

        jLabel2.setText("Mã giảm giá");

        jLabel3.setText("Tên chương trình");

        jLabel4.setText("Mức giảm giá (%)");

        jLabel5.setText("TG bắt đầu ");

        jLabel6.setText("TG kết thúc");

        jLabel7.setText("Trạng thái");

        txtMaKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKMActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoHoatDong);
        rdoHoatDong.setSelected(true);
        rdoHoatDong.setText("Đang hoạt động");

        buttonGroup1.add(rdoNgungHoatDong);
        rdoNgungHoatDong.setText("Ngừng hoạt động");

        btnThem.setText("THÊM");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnCapNhat.setText("CẬP NHẬT");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnMoi.setText("MỚI");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnKetThuc.setText("jButton1");
        btnKetThuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKetThucActionPerformed(evt);
            }
        });

        btnBatDau.setText("jButton1");
        btnBatDau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatDauActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlKhuyenMaiLayout = new javax.swing.GroupLayout(pnlKhuyenMai);
        pnlKhuyenMai.setLayout(pnlKhuyenMaiLayout);
        pnlKhuyenMaiLayout.setHorizontalGroup(
            pnlKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKhuyenMaiLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlKhuyenMaiLayout.createSequentialGroup()
                        .addComponent(rdoHoatDong)
                        .addGap(18, 18, 18)
                        .addComponent(rdoNgungHoatDong))
                    .addComponent(jLabel7)
                    .addComponent(txtMucGiam, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenKM, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addGroup(pnlKhuyenMaiLayout.createSequentialGroup()
                        .addGroup(pnlKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtKetThuc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(txtBatDau, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5))
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(pnlKhuyenMaiLayout.createSequentialGroup()
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlKhuyenMaiLayout.setVerticalGroup(
            pnlKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKhuyenMaiLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTenKM, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMucGiam, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBatDau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKetThuc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoHoatDong)
                    .addComponent(rdoNgungHoatDong))
                .addGap(40, 40, 40)
                .addGroup(pnlKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDanhSachKhuyenMai.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách khuyến mãi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12))); // NOI18N
        pnlDanhSachKhuyenMai.setOpaque(false);

        tblDanhSachKM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã KM", "Tên KM", "Giảm giá", "Trạng thái", "Ngày bắt đầu ", "Ngày kết thúc"
            }
        ));
        tblDanhSachKM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachKMMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhSachKM);

        javax.swing.GroupLayout pnlDanhSachKhuyenMaiLayout = new javax.swing.GroupLayout(pnlDanhSachKhuyenMai);
        pnlDanhSachKhuyenMai.setLayout(pnlDanhSachKhuyenMaiLayout);
        pnlDanhSachKhuyenMaiLayout.setHorizontalGroup(
            pnlDanhSachKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachKhuyenMaiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDanhSachKhuyenMaiLayout.setVerticalGroup(
            pnlDanhSachKhuyenMaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDanhSachKhuyenMaiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlDanhSachSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDanhSachKhuyenMai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlKhuyenMai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlDanhSachSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlDanhSachKhuyenMai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboApDungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboApDungActionPerformed
        // TODO add your handling code here:
        chonHang();
    }//GEN-LAST:event_cboApDungActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        this.insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblDanhSachKMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachKMMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            this.row = tblDanhSachKM.getSelectedRow();
            this.edit();
            tblDanhSachSP.clearSelection();
        }
    }//GEN-LAST:event_tblDanhSachKMMouseClicked

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void txtMaKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKMActionPerformed

    private void tblDanhSachSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachSPMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            this.row = tblDanhSachSP.getSelectedRow();
            this.edit1();
            tblDanhSachKM.clearSelection();
        }
    }//GEN-LAST:event_tblDanhSachSPMouseClicked

    private void btnBatDauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatDauActionPerformed
        // TODO add your handling code here:
        date.showPopup();
    }//GEN-LAST:event_btnBatDauActionPerformed

    private void btnKetThucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKetThucActionPerformed
        // TODO add your handling code here:
        date2.showPopup();
    }//GEN-LAST:event_btnKetThucActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatDau;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnKetThuc;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboApDung;
    private com.raven.datechooser.DateChooser date;
    private com.raven.datechooser.DateChooser date2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlDanhSachKhuyenMai;
    private javax.swing.JPanel pnlDanhSachSP;
    private javax.swing.JPanel pnlKhuyenMai;
    private javax.swing.JRadioButton rdoHoatDong;
    private javax.swing.JRadioButton rdoNgungHoatDong;
    private javax.swing.JTable tblDanhSachKM;
    private javax.swing.JTable tblDanhSachSP;
    private javax.swing.JTextField txtBatDau;
    private javax.swing.JTextField txtKetThuc;
    private javax.swing.JTextField txtMaKM;
    private javax.swing.JTextField txtMucGiam;
    private javax.swing.JTextField txtTenKM;
    // End of variables declaration//GEN-END:variables

    SanPhamDao spdao = new SanPhamDao();
    KhuyenMaiDAO kmdao = new KhuyenMaiDAO();
    int row = -1;

    private void init() {
        fillComboBoxHang();
        fillTableDanhSachKM();
        updateStatus();
        this.row = 1;
        tblDanhSachKM.setRowSelectionInterval(row, row);
        this.edit();
    }

    void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblDanhSachKM.getRowCount() - 1);

        txtMaKM.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnCapNhat.setEnabled(edit);
        btnMoi.setEnabled(edit);

    }

    /////////////KHUYEN MAI /////////////
    KhuyenMai getForm() {
        KhuyenMai km = new KhuyenMai();
        km.setMAKM(txtMaKM.getText());
        km.setTENKM(txtTenKM.getText());
        km.setMUCGIAMGIA(Integer.parseInt(txtMucGiam.getText()));
        km.setBATDAUKM(XDate.toDate(txtBatDau.getText(), "dd-MM-yyyy"));
        km.setKETTHUCKM(XDate.toDate(txtKetThuc.getText(), "dd-MM-yyyy"));
        km.setTRANGTHAI(rdoHoatDong.isSelected());
        return km;
    }

    void setForm(KhuyenMai km) {
        txtMaKM.setText(km.getMAKM());
        txtTenKM.setText(km.getTENKM());
        txtMucGiam.setText(String.valueOf(km.getMUCGIAMGIA()));
        txtBatDau.setText(XDate.toString(km.getBATDAUKM(), "dd-MM-yyyy"));
        txtKetThuc.setText(XDate.toString(km.getKETTHUCKM(), "dd-MM-yyyy"));
        txtMaKM.setText(km.getMAKM());
        rdoHoatDong.setSelected(km.isTRANGTHAI());
        rdoNgungHoatDong.setSelected(!km.isTRANGTHAI());
    }

    void clearForm() {
        KhuyenMai km = new KhuyenMai();
        km.setBATDAUKM(new Date());
        km.setKETTHUCKM(XDate.addDays(new Date(), 30));
        this.setForm(km);
//        buttonGroup1.clearSelection();
        this.row = -1;
        this.updateStatus();
        tblDanhSachKM.clearSelection();
        tblDanhSachSP.clearSelection();
    }

    void edit() {
        String makm = (String) tblDanhSachKM.getValueAt(row, 0);
//        tblNhanVien.setRowSelectionInterval(row, row); //them
        KhuyenMai km = kmdao.selectByID(makm);
        this.setForm(km);
        this.updateStatus();
    }

    void edit1() {
        String makm = (String) tblDanhSachSP.getValueAt(row, 8);
//        tblNhanVien.setRowSelectionInterval(row, row); //them
        KhuyenMai km = kmdao.selectByID(makm);
        this.setForm(km);
        this.updateStatus();
    }

    boolean isValidate() {
        KhuyenMai km = new KhuyenMai();
        km.setMAKM(txtMaKM.getText());
        if (kmdao.selectByID(km.getMAKM()) != null) {
            MsgBox.alert(this, "Mã khuyến mãi đã tồn tại");
            return false;
        }
        if (txtMaKM.getText().length() == 0) {
            MsgBox.alert(this, "Mã khuyến mãi không được để trống");
            return false;
        }
        if (txtTenKM.getText().length() == 0) {
            MsgBox.alert(this, "Tên không được để trống");
            return false;
        }
        if (txtMucGiam.getText().length() == 0) {
            MsgBox.alert(this, "Mức giảm giá không được để trống");
            return false;
        }
        if (txtBatDau.getText().length() == 0) {
            MsgBox.alert(this, "Thời gian bắt đầu không được để trống");
            return false;
        }
        if (txtKetThuc.getText().length() == 0) {
            MsgBox.alert(this, "Thời gian kết thúc không được để trống");
            return false;
        }
        try {
            int mucGiamGia = Integer.parseInt(txtMucGiam.getText());
        } catch (Exception e) {
            MsgBox.alert(this, "Mức giảm giá phải là dạng số");
            return false;
        }
        try {
            Date ngay = XDate.toDate(txtBatDau.getText(), "dd-MM-yyyy");
        } catch (Exception e) {
            MsgBox.alert(this, "Ngày bắt đầu không đúng định dạng (Ngày-Tháng-Năm)");
            return false;
        }
        try {
            Date ngay = XDate.toDate(txtKetThuc.getText(), "dd-MM-yyyy");
        } catch (Exception e) {
            MsgBox.alert(this, "Ngày kết thúc không đúng định dạng (Ngày-Tháng-Năm)");
            return false;
        }
        if (txtBatDau.getText().equals(txtKetThuc.getText())) {
            MsgBox.alert(this, "Ngày không được giống nhau!");
            return false;
        }

        return true;
    }

    void insert() {
        if (isValidate()) {
            try {
                KhuyenMai km = getForm();
                kmdao.insert(km);
                this.fillTableDanhSachKM();
                for (int i = 0; i < tblDanhSachSP.getRowCount(); i++) {
                    String masp = (String) tblDanhSachSP.getValueAt(i, 0);
                    String makm = (String) tblDanhSachSP.getValueAt(i, 8);
                    SanPham sp = spdao.selectByID(masp);
                    sp.setMaKM(makm);
                    spdao.update1(sp);
                }
                this.fillTableDanhSachKM();
                MsgBox.alert(this, "Thêm mới thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm mới thất bại! (Khuyến mãi)");
            }
        }

    }

    boolean isValidateUpdate() {
        if (txtMaKM.getText().length() == 0) {
            MsgBox.alert(this, "Mã khuyến mãi không được để trống");
            return false;
        }
        if (txtTenKM.getText().length() == 0) {
            MsgBox.alert(this, "Tên không được để trống");
            return false;
        }
        if (txtMucGiam.getText().length() == 0) {
            MsgBox.alert(this, "Mức giảm giá không được để trống");
            return false;
        }
        if (txtBatDau.getText().length() == 0) {
            MsgBox.alert(this, "Thời gian bắt đầu không được để trống");
            return false;
        }
        if (txtKetThuc.getText().length() == 0) {
            MsgBox.alert(this, "Thời gian kết thúc không được để trống");
            return false;
        }
        try {
            int mucGiamGia = Integer.parseInt(txtMucGiam.getText());
        } catch (Exception e) {
            MsgBox.alert(this, "Mức giảm giá phải là dạng số");
            return false;
        }
        try {
            Date ngay = XDate.toDate(txtBatDau.getText(), "dd-MM-yyyy");
        } catch (Exception e) {
            MsgBox.alert(this, "Ngày bắt đầu không đúng định dạng (Ngày-Tháng-Năm)");
            return false;
        }
        try {
            Date ngay = XDate.toDate(txtKetThuc.getText(), "dd-MM-yyyy");
        } catch (Exception e) {
            MsgBox.alert(this, "Ngày kết thúc không đúng định dạng (Ngày-Tháng-Năm)");
            return false;
        }
        if (txtBatDau.getText().equals(txtKetThuc.getText())) {
            MsgBox.alert(this, "Ngày không được giống nhau!");
            return false;
        }

        return true;
    }

    void update() {
        if (isValidateUpdate()) {
            if (tblDanhSachKM.getSelectedRow() == 0) {
                MsgBox.alert(this, "Dữ liệu mẫu không được cập nhật");
            } else {
                try {
                    //form km
                    KhuyenMai km = getForm();
                    kmdao.update(km);

                    for (int i = 0; i < tblDanhSachSP.getRowCount(); i++) {
                        String masp = (String) tblDanhSachSP.getValueAt(i, 0);
                        String makm = (String) tblDanhSachSP.getValueAt(i, 8);
                        SanPham sp = spdao.selectByID(masp);
                        sp.setMaKM(makm);
                        spdao.update1(sp);
                    }
                    this.fillTableDanhSachKM();

                    MsgBox.alert(this, "Cập nhật thành công! (Khuyến mãi)");
                } catch (Exception e) {
                    MsgBox.alert(this, "Cập nhật thất bại! (Vui lòng điền đầy đủ)");
                }
            }
//            try {
//                //form km
//                KhuyenMai km = getForm();
//                kmdao.update(km);
//
//                for (int i = 0; i < tblDanhSachSP.getRowCount(); i++) {
//                    String masp = (String) tblDanhSachSP.getValueAt(i, 0);
//                    String makm = (String) tblDanhSachSP.getValueAt(i, 8);
//                    SanPham sp = spdao.selectByID(masp);
//                    sp.setMaKM(makm);
//                    spdao.update1(sp);
//                }
//                this.fillTableDanhSachKM();
//                
//                MsgBox.alert(this, "Cập nhật thành công! (Khuyến mãi)");
//            } catch (Exception e) {
//                MsgBox.alert(this, "Cập nhật thất bại! (Khuyến mãi)");
//            }
        }

    }

    /////////////DANH SACH SAN PHAM /////////////
    void fillComboBoxHang() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboApDung.getModel();
        model.removeAllElements();
        try {
            model.addElement("Tất cả");
            List<String> list = spdao.selectAllHang();
            for (String cd : list) {
                model.addElement(cd);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

//    void fillTableDanhSachSP() {
//        DefaultTableModel model = (DefaultTableModel) tblDanhSachSP.getModel();
//        model.setRowCount(0);
//        try {
//            List<SanPham> list = spdao.selectAll();
//            lietKe(list, model);
//        } catch (Exception e) {
//            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
//        }
//    }
    void chonHang() {
        this.fillTableDanhSachSPTheoHang();
    }

    void fillTableDanhSachSPTheoHang() {
        DefaultTableModel model = (DefaultTableModel) tblDanhSachSP.getModel();
        model.setRowCount(0);
        try {
            String hang = (String) cboApDung.getSelectedItem();
            if (hang.equals("Tất cả")) {
                List<SanPham> list = spdao.selectAll();
                lietKe(list, model);
            } else {
                List<SanPham> list = spdao.selectByCBO(hang);
                lietKe(list, model);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void lietKe(List<SanPham> list, DefaultTableModel model) {
        for (SanPham sp : list) {
            Object[] row = {
                sp.getMaSp(),
                sp.getTenSp(),
                sp.getLoai(),
                sp.getDonGia(),
                sp.getSoLuong(),
                sp.getMau(),
                sp.getKichThuoc(),
                sp.getHang(),
                sp.getMaKM()};
            model.addRow(row);
        }
    }

    /////////////DANH SACH KHUYEN MAI   /////////////
    void fillTableDanhSachKM() {
        DefaultTableModel model = (DefaultTableModel) tblDanhSachKM.getModel();
        model.setRowCount(0);
        try {
            List<KhuyenMai> list = kmdao.selectAll();
            for (KhuyenMai km : list) {
                Object[] row = {
                    km.getMAKM(),
                    km.getTENKM(),
                    km.getMUCGIAMGIA(),
                    km.isTRANGTHAI() ? "Đang hoạt động" : "Ngừng hoạt động",
                    XDate.toString(km.getBATDAUKM(), "dd-MM-yyyy"),
                    XDate.toString(km.getKETTHUCKM(), "dd-MM-yyyy")
                };
                model.addRow(row);
            }

        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }

    }

}
